Exercice n°2 :
a)	Sauvegarder la taille plus le contenu de la chaine de caractère.
b)	Typedef struct {
    Char * nom ;
    Char * prenom ;
    Char * adresse ;
} ContactD_t ;
c)	Void ajouter (int fd, contactD_t contact){
    size_t taille;
    taille =strlen(contact.nom)+1;
    write(fd,&taille, sizeof(taille));
    write(fd, contact.nom,taille); Le faire pour tous les éléments de la structure.
}
d) contactD_t lire(int fd){
    size_t taille;
    contactD_t contact;
    read(fd,&taille, sizeof(taille));
    contact.nom = (char*)malloc(taille*sizeof(char));
    read(fd,contact.nom,taille);
    return contact;
}
e) le problème est qu'on ne peux pas définir la taille car on ne la connais pas et si l'on supprime un élément il vas rester un trou d'une taille indéfini.
f) pour résoudre le prolbème on peut utiliser plusieures stratégies : 
- ajouter un caractère pour commencer un contact
- définir la taille minimum d'un contact dans le fichier quand tous les champs sont vides : 3*4octets+3*1octet

Exercice n°3
a) pour éviter les déplacements des contacts, simplicité de lecture.
b) dans le cas ou le nombre de contact dépasse la taille de la table de postions on peut rajouter une nouvelle table.
c)#define TAILLE 16
Typedef struct {
    off_t adr[TAILLE];
    off_t suivante;
} table_t;
d) enregistrer l'état d'un contact a une position
Typedef struct {
    off_t adr[TAILLE];
    unsigned char etat[TAILLE];
    off_t suivante;
} table_t;

//info en plus ca ->
pour les états : 
#define ETAT_LIBRE 0
#define ETAT_OCCUPE 1

e)Parcourir la table
Si etat == ETAT_LIBRE
    Lire taille du trou (pour savoir si le contact peut tenir dedans);
Sinon partir sur une autre table
    Et répeter les opérations précédentes.
Si rien trouver 
    créer une autre table.

Exercice n°4 :
a) Typedef struct {
    off_t adr[TAILLE];
    off_t taille[TAILLE];
    off_t suivante;
} tableVide_t;
b) Rechercher un trou
    si la taille du trou > taille du contact
        je met le contact
    si aucun
        ajout a la fin du fichier
c) Récupèrer la taille du contact + position
- ajout dans la table de vides
- suppression de l'entrée dans la taille de position